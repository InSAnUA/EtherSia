#include "EtherSia.h"
#include "hext.hh"
#include "util.h"

#suite TCP

#test construct_server
EtherSia_Dummy ether;
TCPServer server(ether, 8080);
ck_assert_int_eq(server.localPort(), 8080);


#test have_packet_fin
EtherSia_Dummy ether;
ether.setGlobalAddress("2001:08b0:ffd5:0003:0204:a3ff:fe2c:2bb9");
ether.begin("00:04:a3:2c:2b:b9");
ether.clearSent();

TCPServer server(ether, 80);
HextFile tcp_fin_ack("packets/tcp_receive_fin_ack.hext");
ether.injectRecievedPacket(tcp_fin_ack.buffer, tcp_fin_ack.length);
ck_assert_int_eq(ether.receivePacket(), 86);
ck_assert(server.havePacket() == false);

HextFile expect("packets/tcp_send_fin_ack.hext");
frame_t &sent = ether.getLastSent();
ck_assert_int_eq(sent.length, expect.length);
ck_assert(memcmp(sent.packet, expect.buffer, expect.length) == 0);
ether.end();
