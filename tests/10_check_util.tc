#include "util.h"
#suite Util

#test asciiToHex_0
ck_assert(asciiToHex('0') == 0x0);

#test asciiToHex_9
ck_assert(asciiToHex('9') == 0x9);

#test asciiToHex_A
ck_assert(asciiToHex('A') == 0xA);

#test asciiToHex_F
ck_assert(asciiToHex('F') == 0xF);

#test asciiToHex_a
ck_assert(asciiToHex('a') == 0xa);

#test asciiToHex_f
ck_assert(asciiToHex('f') == 0xf);

#test asciiToHex_underscore
ck_assert(asciiToHex('_') == -1);

#test asciiToHex_colon
ck_assert(asciiToHex(':') == -1);


#test containsColon_true
ck_assert(containsColon("2001:4860:4860::8888") == true);

#test containsColon_false
ck_assert(containsColon("www.aelius.com") == false);

#test containsColon_host_port
ck_assert(containsColon("www.aelius.com:80") == true);


#test chksum_hello
const char* hello = "Hello";
uint16_t checksum = ~ chksum(0, (const uint8_t*)hello, strlen(hello));
ck_assert_uint_eq(checksum, 0xDC2D);

#test chksum_simple_accumulative
uint16_t checksum = 0;
const char* hello = "Hello";
const char* world = "World";
checksum = chksum(checksum, (const uint8_t*)hello, strlen(hello));
checksum = ~ chksum(checksum, (const uint8_t*)world, strlen(world));
ck_assert_uint_eq(checksum, 0xAE51);

#test chksum_wikipedia
// Example from: https://en.wikipedia.org/wiki/IPv4_header_checksum
const uint8_t data[] = {
    0x45, 0x00, 0x00, 0x73, 0x00, 0x00, 0x40, 0x00, 0x40, 0x11, // 0xb8, 0x61,
    0xc0, 0xa8, 0x00, 0x01, 0xc0, 0xa8, 0x00, 0xc7,
};
uint16_t checksum = ~ chksum(0, data, sizeof(data));
ck_assert_uint_eq(checksum, 0xB861);

